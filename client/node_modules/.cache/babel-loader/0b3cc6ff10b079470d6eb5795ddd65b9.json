{"ast":null,"code":"var _jsxFileName = \"/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/AdsDisplayed.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport '../styles/adsPreview.css';\nimport { withRouter } from \"react-router-dom\";\nexport default withRouter(function AdsDisplayed({\n  history,\n  location,\n  match,\n  adsSearched,\n  max\n}) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n  const [toggleFilters, setToggleFilters] = useState(false);\n  const isHome = location.pathname === '/';\n  console.log('ads', ads);\n\n  const displayMap = () => {\n    setToggleMap(!toggleMap);\n  };\n\n  function displayFilters() {\n    setToggleFilters(!toggleFilters);\n  }\n\n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad, i) => i < max);\n      console.log(adsFiltered);\n      setAds(adsFiltered);\n    }\n\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`).then(apiRes => {\n      console.log(\"apiRes\", apiRes.data);\n\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad, i) => i < max);\n        console.log(adsFiltered);\n        setAds(adsFiltered);\n      } else {\n        setAds(apiRes.data.dbRes);\n      }\n    }).catch(err => console.error(err));\n  }, [location]);\n  useEffect(() => {\n    if (adsSearched && adsSearched.length !== 0) {\n      setAds(adsSearched);\n    }\n\n    const locationsArray = ads.map((ad, i) => ad.location.coordinates);\n    setLocations(locationsArray);\n  }, [ads, adsSearched]); // const handleCategories = e => {\n  //         let catSelected = e.target.id;\n  //         console.log(catSelected)\n  //         let loc = location.search;\n  //         history.push({\n  //             pathname: \"/annonces\",\n  //             search: `${loc}&category=${catSelected}`\n  //         });\n  // }\n\n  console.log(ads);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, isHome && React.createElement(TabsAd, {\n    mapActive: toggleMap,\n    filtersActive: toggleFilters,\n    toggleFilters: displayFilters,\n    toggle: displayMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: toggleFilters ? \"withfilters\" : \"nofilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ads-preview-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, Boolean(ads.length) ? ads.map((ad, i) => React.createElement(PreviewAd, {\n    data: ad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Aucune annonce \\xE0 afficher...\"))));\n});","map":{"version":3,"sources":["/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/AdsDisplayed.jsx"],"names":["React","useEffect","useState","APIHandler","PreviewAd","TabsAd","Map","LoadScript","FontAwesomeIcon","faMapMarkedAlt","withRouter","AdsDisplayed","history","location","match","adsSearched","max","ads","setAds","locations","setLocations","toggleMap","setToggleMap","toggleFilters","setToggleFilters","isHome","pathname","console","log","displayMap","displayFilters","adsFiltered","filter","ad","i","query","search","replace","get","then","apiRes","data","dbRes","catch","err","error","length","locationsArray","map","coordinates","Boolean"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkedAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport '../styles/adsPreview.css'\nimport {withRouter} from \"react-router-dom\";\n\n\nexport default withRouter(function AdsDisplayed({ history, location, match, adsSearched, max }) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n  const [toggleFilters, setToggleFilters] = useState(false);\n\n  const isHome = location.pathname === '/';\n  console.log('ads', ads)\n\n  const displayMap = ()=> {\n    setToggleMap(!toggleMap)\n  }\n  function displayFilters(){\n    setToggleFilters(!toggleFilters)\n  }\n  \n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad,i) => i < max )\n      console.log(adsFiltered)\n      setAds(adsFiltered)\n    }\n\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`)\n    .then(apiRes => {\n      console.log(\"apiRes\", apiRes.data)\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad,i) => i < max )\n        console.log(adsFiltered)\n        setAds(adsFiltered)\n      } else {\n        setAds(apiRes.data.dbRes)\n      }\n      \n    })\n    .catch(err => console.error(err))\n  }, [location])\n\n  useEffect(()=>{\n\n    if(adsSearched && adsSearched.length!==0) {\n      setAds(adsSearched)\n    }\n  \n    const locationsArray = ads.map((ad, i)=>(ad.location.coordinates))\n    setLocations(locationsArray)\n  }, [ads, adsSearched])\n\n  // const handleCategories = e => {\n  //         let catSelected = e.target.id;\n  //         console.log(catSelected)\n  //         let loc = location.search;\n  //         history.push({\n  //             pathname: \"/annonces\",\n  //             search: `${loc}&category=${catSelected}`\n  //         });\n  // }\n\n  console.log(ads)\n \n  return (\n    <div>\n      {\n        isHome && <TabsAd\n          mapActive={toggleMap}\n          filtersActive={toggleFilters}\n          toggleFilters={displayFilters}\n          toggle={displayMap}\n        />\n      }\n      \n      <div className={toggleFilters?\"withfilters\": \"nofilter\"}>\n        {/* <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_APIKEY}\n        >\n        {toggleMap && <Map locations={locations} />}\n        </LoadScript> */}\n      \n        <div className=\"ads-preview-container\">\n          {Boolean(ads.length) ? (\n            ads.map((ad, i) => <PreviewAd data={ad} />)\n          ) : (\n            <p>Aucune annonce à afficher...</p>\n          )}\n        </div>\n\n      </div>\n    </div>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}