{"ast":null,"code":"var _jsxFileName = \"/Users/Pauline/Desktop/Ironhack/module3/help-mate/help-mate-client/client/src/views/AdsDisplayed.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { withRouter } from \"react-router-dom\";\nexport default withRouter(function AdsDisplayed({\n  history,\n  location,\n  match,\n  adsSearched,\n  max\n}) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n\n  const displayMap = () => {\n    setToggleMap(!toggleMap);\n  }; // useEffect(()=>{\n  //   APIHandler.get(\"/ads\")\n  //     .then(apiRes => setAds(apiRes.data))\n  //     .catch(err => console.error(err))\n  // }, [])\n\n\n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad, i) => i < max);\n      console.log(adsFiltered);\n      setAds(adsFiltered);\n    }\n\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`).then(apiRes => {\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad, i) => i < max);\n        console.log(adsFiltered);\n        setAds(adsFiltered);\n      } else {\n        setAds(apiRes.data.dbRes);\n      }\n    }).catch(err => console.error(err));\n  }, [location]);\n  useEffect(() => {\n    if (adsSearched && adsSearched.length !== 0) {\n      setAds(adsSearched);\n    }\n\n    const locationsArray = ads.map((ad, i) => ad.location.coordinates);\n    setLocations(locationsArray);\n  }, [ads, adsSearched]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TabsAd, {\n    mapActive: toggleMap,\n    toggle: displayMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(LoadScript, {\n    id: \"script-loader\",\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_APIKEY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, toggleMap && React.createElement(Map, {\n    locations: locations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), Boolean(ads.length) ? ads.map((ad, i) => React.createElement(PreviewAd, {\n    data: ad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Aucune annonce...\"));\n});","map":{"version":3,"sources":["/Users/Pauline/Desktop/Ironhack/module3/help-mate/help-mate-client/client/src/views/AdsDisplayed.jsx"],"names":["React","useEffect","useState","APIHandler","PreviewAd","TabsAd","Map","LoadScript","withRouter","AdsDisplayed","history","location","match","adsSearched","max","ads","setAds","locations","setLocations","toggleMap","setToggleMap","displayMap","adsFiltered","filter","ad","i","console","log","query","search","replace","get","then","apiRes","data","dbRes","catch","err","error","length","locationsArray","map","coordinates","process","env","REACT_APP_GOOGLE_APIKEY","Boolean"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAGA,eAAeA,UAAU,CAAC,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAtB,EAAsE;AAC9F,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMmB,UAAU,GAAG,MAAK;AACtBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD,CAJ8F,CAO9F;AACA;AACA;AACA;AACA;;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,GAAJ,EAAS;AACP,YAAMQ,WAAW,GAAGP,GAAG,CAACQ,MAAJ,CAAW,CAACC,EAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGX,GAAzB,CAApB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACAN,MAAAA,MAAM,CAACM,WAAD,CAAN;AACD;;AACD,UAAMM,KAAK,GAAGjB,QAAQ,CAACkB,MAAT,CAAgBC,OAAhB,CAAwB,UAAxB,EAAoC,EAApC,CAAd;AACA3B,IAAAA,UAAU,CAAC4B,GAAX,CAAgB,gBAAeH,KAAM,EAArC,EACCI,IADD,CACMC,MAAM,IAAI;AACd,UAAInB,GAAJ,EAAS;AACP,cAAMQ,WAAW,GAAGW,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBZ,MAAlB,CAAyB,CAACC,EAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGX,GAAvC,CAApB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACAN,QAAAA,MAAM,CAACM,WAAD,CAAN;AACD,OAJD,MAIO;AACLN,QAAAA,MAAM,CAACiB,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAN;AACD;AAEF,KAVD,EAWCC,KAXD,CAWOC,GAAG,IAAIX,OAAO,CAACY,KAAR,CAAcD,GAAd,CAXd;AAYD,GAnBQ,EAmBN,CAAC1B,QAAD,CAnBM,CAAT;AAqBAV,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAGY,WAAW,IAAIA,WAAW,CAAC0B,MAAZ,KAAqB,CAAvC,EAA0C;AACxCvB,MAAAA,MAAM,CAACH,WAAD,CAAN;AACD;;AAGD,UAAM2B,cAAc,GAAGzB,GAAG,CAAC0B,GAAJ,CAAQ,CAACjB,EAAD,EAAKC,CAAL,KAAUD,EAAE,CAACb,QAAH,CAAY+B,WAA9B,CAAvB;AACAxB,IAAAA,YAAY,CAACsB,cAAD,CAAZ;AACD,GATQ,EASN,CAACzB,GAAD,EAAMF,WAAN,CATM,CAAT;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEM,SAAnB;AAA8B,IAAA,MAAM,EAAGE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AACA,IAAA,EAAE,EAAC,eADH;AAEA,IAAA,gBAAgB,EAAEsB,OAAO,CAACC,GAAR,CAAYC,uBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC1B,SAAS,IAAI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJd,CAFJ,EAQK6B,OAAO,CAAC/B,GAAG,CAACwB,MAAL,CAAP,GACCxB,GAAG,CAAC0B,GAAJ,CAAQ,CAACjB,EAAD,EAAKC,CAAL,KAAW,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAED,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXN,CADF;AAgBD,CA7DwB,CAAzB","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport {withRouter} from \"react-router-dom\";\n\n\nexport default withRouter(function AdsDisplayed({ history, location, match, adsSearched, max }) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n  const displayMap = ()=> {\n    setToggleMap(!toggleMap)\n  }\n  // useEffect(()=>{\n  //   APIHandler.get(\"/ads\")\n  //     .then(apiRes => setAds(apiRes.data))\n  //     .catch(err => console.error(err))\n  // }, [])\n\n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad,i) => i < max )\n      console.log(adsFiltered)\n      setAds(adsFiltered)\n    }\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`)\n    .then(apiRes => {\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad,i) => i < max )\n        console.log(adsFiltered)\n        setAds(adsFiltered)\n      } else {\n        setAds(apiRes.data.dbRes)\n      }\n      \n    })\n    .catch(err => console.error(err))\n  }, [location])\n\n  useEffect(()=>{\n\n    if(adsSearched && adsSearched.length!==0) {\n      setAds(adsSearched)\n    }\n  \n\n    const locationsArray = ads.map((ad, i)=>(ad.location.coordinates))\n    setLocations(locationsArray)\n  }, [ads, adsSearched])\n \n  return (\n    <div>\n        <TabsAd mapActive={toggleMap} toggle= {displayMap}/>\n        <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_APIKEY}\n        >\n        {toggleMap && <Map locations={locations} />}\n        </LoadScript>\n        {Boolean(ads.length) ? (\n          ads.map((ad, i) => <PreviewAd data={ad} />)\n        ) : (\n          <p>Aucune annonce...</p>\n        )}\n    </div>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}