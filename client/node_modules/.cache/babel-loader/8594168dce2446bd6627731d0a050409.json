{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport APIHandler from \"../api/APIHandler\";\nimport UserContext from \"./UserContext\";\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const userContext = useContext(UserContext);\n  const {\n    setCurrentUser,\n    currentUser\n  } = userContext;\n  useEffect(() => {\n    APIHandler.get(\"/is-loggedin\").then(res => {\n      setIsLoggedIn(true);\n      setIsLoading(false);\n      setCurrentUser(res.data.currentUser);\n    }).catch(() => {\n      setCurrentUser(null);\n      setIsLoggedIn(false);\n      setIsLoading(false);\n    });\n  }, [setCurrentUser]);\n  return {\n    isLoggedIn,\n    isLoading,\n    currentUser\n  };\n};","map":{"version":3,"sources":["/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/auth/useAuth.js"],"names":["useState","useEffect","useContext","APIHandler","UserContext","useAuth","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","userContext","setCurrentUser","currentUser","get","then","res","data","catch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMU,WAAW,GAAGR,UAAU,CAACE,WAAD,CAA9B;AACA,QAAM;AAAEO,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAkCF,WAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU,CAACU,GAAX,CAAe,cAAf,EACGC,IADH,CACQC,GAAG,IAAI;AACXR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,cAAc,CAACI,GAAG,CAACC,IAAJ,CAASJ,WAAV,CAAd;AACD,KALH,EAMGK,KANH,CAMS,MAAM;AACXN,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,CAACE,cAAD,CAZM,CAAT;AAcA,SAAO;AAAEL,IAAAA,UAAF;AAAcE,IAAAA,SAAd;AAAyBI,IAAAA;AAAzB,GAAP;AACD,CArBM","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport APIHandler from \"../api/APIHandler\";\nimport UserContext from \"./UserContext\";\n\nexport const useAuth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const userContext = useContext(UserContext);\n  const { setCurrentUser, currentUser } = userContext;\n\n  useEffect(() => {\n    APIHandler.get(\"/is-loggedin\")\n      .then(res => {\n        setIsLoggedIn(true);\n        setIsLoading(false);\n        setCurrentUser(res.data.currentUser);\n      })\n      .catch(() => {\n        setCurrentUser(null);\n        setIsLoggedIn(false);\n        setIsLoading(false);\n      });\n  }, [setCurrentUser]);\n\n  return { isLoggedIn, isLoading, currentUser };\n};"]},"metadata":{},"sourceType":"module"}