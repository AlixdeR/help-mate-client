{"ast":null,"code":"var _jsxFileName = \"/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/AdsDisplayed.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport '../styles/adsPreview.css';\nimport { withRouter } from \"react-router-dom\";\nexport default withRouter(function AdsDisplayed({\n  history,\n  location,\n  match,\n  adsSearched,\n  max\n}) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n  const [toggleFilters, setToggleFilters] = useState(false);\n\n  const displayMap = () => {\n    setToggleMap(!toggleMap);\n  };\n\n  function displayFilters() {\n    setToggleFilters(!toggleFilters);\n  }\n\n  useEffect(() => {\n    APIHandler.get(\"/ads\").then(apiRes => setAds(apiRes.data)).catch(err => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad, i) => i < max);\n      console.log(adsFiltered);\n      setAds(adsFiltered);\n    }\n\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`).then(apiRes => {\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad, i) => i < max);\n        console.log(adsFiltered);\n        setAds(adsFiltered);\n      } else {\n        setAds(apiRes.data.dbRes);\n      }\n    }).catch(err => console.error(err));\n  }, [location]);\n  useEffect(() => {\n    if (adsSearched && adsSearched.length !== 0) {\n      setAds(adsSearched);\n    }\n\n    const locationsArray = ads.map((ad, i) => ad.location.coordinates);\n    setLocations(locationsArray);\n  }, [ads, adsSearched]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TabsAd, {\n    mapActive: toggleMap,\n    filtersActive: toggleFilters,\n    toggleFilters: displayFilters,\n    toggle: displayMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: toggleFilters ? \"withfilters filter-map\" : \"nofilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(LoadScript, {\n    id: \"script-loader\",\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_APIKEY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, toggleMap && React.createElement(Map, {\n    locations: locations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ads-preview-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, ads.length ? ads.map((ad, i) => React.createElement(PreviewAd, {\n    data: ad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Aucune annonce \\xE0 afficher...\"))));\n});","map":{"version":3,"sources":["/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/AdsDisplayed.jsx"],"names":["React","useEffect","useState","APIHandler","PreviewAd","TabsAd","Map","LoadScript","FontAwesomeIcon","faMapMarkedAlt","withRouter","AdsDisplayed","history","location","match","adsSearched","max","ads","setAds","locations","setLocations","toggleMap","setToggleMap","toggleFilters","setToggleFilters","displayMap","displayFilters","get","then","apiRes","data","catch","err","console","error","adsFiltered","filter","ad","i","log","query","search","replace","dbRes","length","locationsArray","map","coordinates","process","env","REACT_APP_GOOGLE_APIKEY"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport APIHandler from \"../../src/api/APIHandler\";\nimport PreviewAd from \"../components/ad/PreviewAd\";\nimport TabsAd from \"../components/ad/TabsAds\";\nimport Map from \"../components/map/Map\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkedAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport '../styles/adsPreview.css'\nimport {withRouter} from \"react-router-dom\";\n\n\nexport default withRouter(function AdsDisplayed({ history, location, match, adsSearched, max }) {\n  const [ads, setAds] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [toggleMap, setToggleMap] = useState(false);\n  const [toggleFilters, setToggleFilters] = useState(false)\n  const displayMap = ()=> {\n    setToggleMap(!toggleMap)\n  }\n  function displayFilters(){\n    setToggleFilters(!toggleFilters)\n  }\n  \n  useEffect(()=>{\n    APIHandler.get(\"/ads\")\n      .then(apiRes => setAds(apiRes.data))\n      .catch(err => console.error(err))\n  }, [])\n\n  useEffect(() => {\n    if (max) {\n      const adsFiltered = ads.filter((ad,i) => i < max )\n      console.log(adsFiltered)\n      setAds(adsFiltered)\n    }\n    const query = location.search.replace(\"?search=\", \"\");\n    APIHandler.get(`ads/search?q=${query}`)\n    .then(apiRes => {\n      if (max) {\n        const adsFiltered = apiRes.data.dbRes.filter((ad,i) => i < max )\n        console.log(adsFiltered)\n        setAds(adsFiltered)\n      } else {\n        setAds(apiRes.data.dbRes)\n      }\n      \n    })\n    .catch(err => console.error(err))\n  }, [location])\n\n  useEffect(()=>{\n\n    if(adsSearched && adsSearched.length!==0) {\n      setAds(adsSearched)\n    }\n  \n    const locationsArray = ads.map((ad, i)=>(ad.location.coordinates))\n    setLocations(locationsArray)\n  }, [ads, adsSearched])\n \n  return (\n    <div>\n        <TabsAd mapActive={toggleMap} filtersActive={toggleFilters} toggleFilters={displayFilters} toggle={displayMap}/>\n        <div className={toggleFilters?\"withfilters filter-map\": \"nofilter\"}>\n        <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_APIKEY}\n        >\n        {toggleMap && <Map locations={locations} />}\n        </LoadScript>\n        \n        <div className=\"ads-preview-container\">\n        {ads.length ? (\n          ads.map((ad, i) => <PreviewAd data={ad} />)\n        ) : (\n          <p>Aucune annonce Ã  afficher...</p>\n        )}\n        </div>\n\n        </div>\n    </div>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}