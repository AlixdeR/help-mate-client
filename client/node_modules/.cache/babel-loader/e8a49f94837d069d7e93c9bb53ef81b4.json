{"ast":null,"code":"var _jsxFileName = \"/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/Conversation.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport DisplayMessages from \"../components/messages/DisplayMessages\";\nimport PostMessage from \"../components/messages/PostMessage\";\nimport MesConv from \"../components/messages/MesConv\";\nimport APIHandler from \"../api/APIHandler\";\nimport { useAuth } from \"../auth/useAuth\";\nexport default function Conversation({\n  match,\n  location\n}) {\n  const {\n    isLoading,\n    currentUser\n  } = useAuth();\n  console.log('curentUser', currentUser);\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [newMsg, setNewMsg] = useState(false);\n  const [user, setUser] = useState(false);\n  const textarea = React.createRef();\n  useEffect(() => {\n    APIHandler.get(`/messages/${match.params.to_id}`).then(apiRes => setMessages(apiRes.data)).catch();\n  }, [newMsg, location]);\n  useEffect(() => {\n    console.log('héhooo');\n    APIHandler.get(`/messages/all/${currentUser._id}`).then(apiRes => {\n      console.log('yoooooo');\n      setConversations(apiRes.data);\n    }).catch();\n  }, [currentUser, location]);\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    textarea.current.value = '';\n    APIHandler.post(`/messages/${match.params.to_id}`, {\n      text\n    }).then(apiRes => {\n      setNewMsg(true);\n    }).catch();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"conversation-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(MesConv, {\n    currentUser: currentUser,\n    conversations: conversations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"conversation-placeholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(DisplayMessages, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(PostMessage, {\n    textarea: textarea,\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/wendy/Documents/IRONHACK/MODULE-3/Projet-3-HelpMate/help-mate-client/client/src/views/Conversation.jsx"],"names":["React","useState","useEffect","DisplayMessages","PostMessage","MesConv","APIHandler","useAuth","Conversation","match","location","isLoading","currentUser","console","log","messages","setMessages","conversations","setConversations","text","setText","newMsg","setNewMsg","user","setUser","textarea","createRef","get","params","to_id","then","apiRes","data","catch","_id","handleChange","e","target","value","handleSubmit","preventDefault","current","post"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react'\nimport DisplayMessages from \"../components/messages/DisplayMessages\";\nimport PostMessage from \"../components/messages/PostMessage\";\nimport MesConv from \"../components/messages/MesConv\";\nimport APIHandler from \"../api/APIHandler\";\nimport { useAuth } from \"../auth/useAuth\";\n\nexport default function Conversation({match, location}) {\n\n    const { isLoading, currentUser } = useAuth();\n    console.log('curentUser', currentUser )\n    const [messages, setMessages] = useState([])\n    const [conversations, setConversations] = useState([])\n    const [text, setText] = useState(\"\")\n    const [newMsg, setNewMsg] = useState(false)\n    const [user, setUser] = useState(false)\n    const textarea = React.createRef();\n\n    useEffect(()=>{\n        APIHandler.get(`/messages/${match.params.to_id}`)\n        .then(apiRes => setMessages(apiRes.data))\n        .catch()\n    },[newMsg, location])\n\n    useEffect(()=>{\n        console.log('héhooo')\n        APIHandler.get(`/messages/all/${currentUser._id}`)\n        .then(apiRes => {\n            console.log('yoooooo');\n            setConversations(apiRes.data)})\n        .catch()\n    },[currentUser, location])\n\n    const handleChange = e =>{\n        setText(e.target.value)\n    }\n\n    const handleSubmit = e =>{\n    \n        e.preventDefault();\n        textarea.current.value =''\n        \n        APIHandler.post(`/messages/${match.params.to_id}`, {text})\n        .then(apiRes => {setNewMsg(true)\n        })\n        .catch()\n    }\n    return (\n        <div className='conversation-page'>\n        <MesConv currentUser= {currentUser} conversations={conversations} />\n        <div className='conversation-placeholder'>\n            <DisplayMessages  messages={messages}/>\n            <PostMessage textarea={textarea} handleSubmit={handleSubmit} handleChange={handleChange} />\n        </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}